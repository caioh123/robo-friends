{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"wOAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAAQC,IAAG,+BAA0BH,EAA1B,cACpB,gCACI,6BAAKF,IACL,4BAAIC,WCgBLK,EArBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEhB,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCMdC,EAfG,SAAC,GAAiC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC9B,OACI,qBAAKV,UAAU,MAAf,SACA,uBACAA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCHI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCkBJC,G,wDAnBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAIG,KAAKJ,MAAMC,SACJ,4DAEJG,KAAKX,MAAMK,a,GAhBCQ,cCkDZC,E,kDA7CX,aAAe,IAAD,8BACV,gBAYJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAClB,YAAasB,EAAMC,OAAOC,SAZzC,EAAKX,MAAQ,CACTlB,OAAQ,GACRK,YAAa,IAJP,E,gEAQO,IAAD,OAChByB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACvB,OAAQkC,S,+BAKhC,IAAD,EAC0BZ,KAAKJ,MAA7BlB,EADF,EACEA,OAAQK,EADV,EACUA,YACT8B,EAAiBnC,EAAOoC,QAAO,SAAAC,GACrC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAErD,OAAKtC,EAAOwC,OAKJ,sBAAK5C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACA,cAAC,EAAD,CAAU1B,OAAQmC,WATf,oBAAIvC,UAAU,KAAd,yB,GAvBD4B,aCDlBiB,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.ec5d0fc3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = ({name, email, id}) => {\r\n    return (\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt=\"robots\"src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst CardList = ({ robots }) => {\r\n\r\n    return (    \r\n        <div>\r\n            {            \r\n            robots.map((user, i) => { \r\n                return (\r\n                    <Card     \r\n                        key={i}   \r\n                        id={robots[i].id} \r\n                        name={robots[i].name} \r\n                        email={robots[i].email}\r\n                        />\r\n                );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CardList;","import React from 'react'\r\n\r\nconst SearchBox = ({ searchfield, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n        <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\" \r\n        type=\"search\" \r\n        placeholder=\"search robots\"\r\n        onChange={searchChange}\r\n         />\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react'\r\n\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oooops, that was an error!</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll'\r\nimport './App.css';\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())        \r\n        .then(users => this.setState({robots: users}))}\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})}\r\n\r\n    render() {\r\n        const {robots, searchfield } = this.state\r\n        const filteredRobots = robots.filter(robot => {\r\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n        if (!robots.length) {\r\n            return <h1 className=\"tc\">Loading</h1>\r\n        } else {\r\n            \r\n            return (\r\n                <div className=\"tc\">\r\n                <h1 className=\"f2\" >RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                <ErrorBoundry>\r\n                <CardList robots={filteredRobots}/>\r\n                </ErrorBoundry>\r\n\r\n                </Scroll>\r\n                \r\n                </div>\r\n        \r\n            )\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './containers/App';\n\nReactDOM.render(\n\n  <App />,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}